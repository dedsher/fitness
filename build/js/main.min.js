(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _jurySlider = require("./modules/sliders/jury-slider");
// import {initModals} from './modules/modals/init-modals';
// import {initTabs, tabs} from './modules/tabs/init-tabs';
// import {Runner} from './modules/runner/runner';
// import {Form} from './modules/form-validate/form';
// ---------------------------------
window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------

  (0, _jurySlider.initSliders)();

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    // initModals();
    // initTabs();
    // tabs.init();
    // const runner = new Runner();
    // runner.init();
    // const form = new Form();
    // window.form = form;
    // form.init();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/sliders/jury-slider":2,"./utils/ios-vh-fix":4}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initSliders = void 0;
var sliderJury = document.querySelector('[data-swiper="jury"]');
var sliderButtonPrev = document.querySelector('[data-swiper-button="jury-prev"]');
var sliderButtonNext = document.querySelector('[data-swiper-button="jury-next"]');
var initSliderJury = function initSliderJury() {
  var swiper = new Swiper(sliderJury, {
    slideClass: 'jury__card',
    loop: true,
    navigation: {
      nextEl: sliderButtonPrev,
      prevEl: sliderButtonNext
    },
    grabCursor: true,
    breakPoints: {
      1366: {
        slidesPerView: 4,
        spaceBetween: 40,
        allowTouchMove: false
      },
      768: {
        slidesPerView: 2,
        spaceBetween: 32,
        allowTouchMove: true
      },
      0: {
        slidesPerView: 1,
        spaceBetween: 0,
        allowTouchMove: true
      }
    }
  });
};
var initSliders = exports.initSliders = function initSliders() {
  initSliderJury();
};

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = exports.iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = exports.iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};

},{"./ios-checker":3}]},{},[1])


//# sourceMappingURL=main.min.js.map
